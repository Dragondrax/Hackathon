name: Build and deploy dotnet core project to Azure Function App

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_CRIAR_AGENDAMEDICO: './MedicalHealth.Fiap.Function.Persistencia.AgendaMedico'
  AZURE_FUNCTIONAPP_ATUALIZAR_AGENDAMEDICO: './MedicalHealth.Fiap.Function.Persistencia.Atualizar.AgendaMedico'
  AZURE_FUNCTIONAPP_CRIAR_CONSULTA: './MedicalHealth.Fiap.Function.Persistencia.Criar.Consulta'
  AZURE_FUNCTIONAPP_ATUALIZAR_CONSULTA: './MedicalHealth.Fiap.Function.Persistencia.Atualizar.Consulta'
  AZURE_FUNCTIONAPP_CRIAR_USUARIO: './MedicalHealth.Fiap.Function.Pesistencia.Criar.Usuario'
  AZURE_FUNCTIONAPP_ATUALIZAR_USUARIO: './MedicalHealth.Fiap.Function.Pesistencia.Atualizar.Usuario'
  AZURE_FUNCTIONAPP_CRIAR_MEDICO: './MedicalHealth.Fiap.Function.Pesistencia.Criar.Medico'
  AZURE_FUNCTIONAPP_ATUALIZAR_MEDICO: './MedicalHealth.Fiap.Function.Pesistencia.Atualizar.Medico'
  AZURE_FUNCTIONAPP_CRIAR_PACIENTE: './MedicalHealth.Fiap.Function.Pesistencia.Criar.Paciente'
  AZURE_FUNCTIONAPP_ATUALIZAR_PACIENTE: './MedicalHealth.Fiap.Function.Pesistencia.Atualizar.Paciente'
  DOTNET_VERSION: '8.0.x'

jobs:
  build-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
  
      - name: Configurar .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'

      - name: Build e Publish API
        run: |
          dotnet publish MedicalHealth.Fiap.API -c Release -o ./output/api
          
      - name: Upload dos Artefatos API
        uses: actions/upload-artifact@v4
        with:
          name: api-build
          path: ./output/api

  build-functions:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        function: 
          - FUNCTION_CRIAR_AGENDAMEDICO
          - FUNCTION_ATUALIZAR_AGENDAMEDICO
          - FUNCTION_CRIAR_CONSULTA
          - FUNCTION_ATUALIZAR_CONSULTA
          - FUNCTION_CRIAR_USUARIO
          - FUNCTION_ATUALIZAR_USUARIO
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
      
      - name: Configurar .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'
      
      - name: 'Build FunctionPersistenciaAtualizarConsulta'
        shell: bash
        run: |
          pushd "${{ env[ matrix.function ] }}"
          dotnet restore
          dotnet build --configuration Release --output ./output/FunctionPersistenciaAtualizarConsulta
          popd

  deploy-api:
    runs-on: ubuntu-latest
    needs: build-api
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
      
      - name: Baixar artefatos API
        uses: actions/download-artifact@v4
        with:
          name: api-build
          path: ./output/api
      
      - name: Login no Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Configurar Storage API no Azure
        run: |
          az webapp config appsettings set --resource-group "Hackathon" --name "hackathonapigrupo12" \
          --settings AZURE_WEBJOBS_STORAGE=${{ secrets.AZURE_WEBJOBS_STORAGE }}

      - name: Deploy Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'hackathonapigrupo12'
          slot-name: 'Production'
          package: ./output/api
      
      - name: Logout do Azure
        run: az logout

  deploy-functions:
    runs-on: ubuntu-latest
    needs: build-functions
    strategy:
      matrix:
        function:
          - FUNCTION_CRIAR_AGENDAMEDICO
          - FUNCTION_ATUALIZAR_AGENDAMEDICO
          - FUNCTION_CRIAR_CONSULTA
          - FUNCTION_ATUALIZAR_CONSULTA
          - FUNCTION_CRIAR_USUARIO
          - FUNCTION_ATUALIZAR_USUARIO
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Login no Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: 'Publicar FunctionPersistenciaAtualizarConsulta'
        shell: bash
        run: |
          pushd "${{ env[matrix.function] }}"
          dotnet publish --configuration Release --output ./output/FunctionPersistenciaAtualizarConsulta
          popd
      
      - name: 'Rodar Action para FunctionPersistenciaAtualizarConsulta'
        uses: Azure/functions-action@v1
        id: deploy-function
        with:
          app-name: 'FunctionPersistenciaAtualizarConsulta'
          slot-name: 'Production'
          package: '${{ env[matrix.function] }}/output/FunctionPersistenciaAtualizarConsulta'
          publish-profile: ${{ secrets[format('AZUREAPPSERVICE_PUBLISHPROFILE_{0}', matrix.function)] }}
      
      - name: 'Limpar Diretório FunctionPersistenciaAtualizarConsulta'
        shell: bash
        run: |
          rm -rf "${{ env[matrix.function] }}/output/FunctionPersistenciaAtualizarConsulta"
      
      - name: Logout do Azure
        run: az logout
